let data = "959,103 -> 139,923\n" +
    "899,63 -> 899,53\n" +
    "591,871 -> 364,644\n" +
    "739,913 -> 310,484\n" +
    "460,309 -> 460,705\n" +
    "351,389 -> 351,837\n" +
    "420,55 -> 420,541\n" +
    "916,520 -> 382,520\n" +
    "136,604 -> 295,604\n" +
    "343,59 -> 142,59\n" +
    "951,206 -> 806,206\n" +
    "984,950 -> 61,27\n" +
    "739,388 -> 988,388\n" +
    "374,370 -> 644,370\n" +
    "403,504 -> 798,899\n" +
    "943,535 -> 229,535\n" +
    "149,227 -> 583,661\n" +
    "62,126 -> 62,352\n" +
    "131,391 -> 131,717\n" +
    "254,944 -> 254,220\n" +
    "572,111 -> 572,47\n" +
    "336,249 -> 830,743\n" +
    "898,858 -> 203,163\n" +
    "203,320 -> 825,942\n" +
    "19,318 -> 19,120\n" +
    "740,432 -> 740,39\n" +
    "591,383 -> 220,754\n" +
    "445,592 -> 19,592\n" +
    "202,370 -> 837,370\n" +
    "473,916 -> 600,789\n" +
    "118,955 -> 884,189\n" +
    "377,376 -> 533,532\n" +
    "160,264 -> 160,62\n" +
    "627,572 -> 627,679\n" +
    "217,690 -> 217,629\n" +
    "685,323 -> 866,504\n" +
    "391,309 -> 493,207\n" +
    "872,776 -> 357,776\n" +
    "116,326 -> 116,426\n" +
    "82,900 -> 832,900\n" +
    "594,862 -> 594,593\n" +
    "802,636 -> 802,223\n" +
    "862,226 -> 862,787\n" +
    "313,573 -> 834,573\n" +
    "145,631 -> 13,499\n" +
    "545,433 -> 420,308\n" +
    "427,623 -> 427,808\n" +
    "898,120 -> 511,120\n" +
    "859,811 -> 859,28\n" +
    "715,958 -> 715,893\n" +
    "115,234 -> 484,234\n" +
    "125,253 -> 50,253\n" +
    "737,265 -> 158,265\n" +
    "523,965 -> 523,983\n" +
    "118,51 -> 118,766\n" +
    "455,774 -> 455,357\n" +
    "680,881 -> 925,881\n" +
    "191,186 -> 187,186\n" +
    "821,629 -> 792,658\n" +
    "397,906 -> 397,962\n" +
    "988,811 -> 988,427\n" +
    "91,733 -> 519,733\n" +
    "46,172 -> 566,172\n" +
    "740,619 -> 880,759\n" +
    "609,465 -> 609,702\n" +
    "289,211 -> 289,620\n" +
    "622,135 -> 622,929\n" +
    "113,53 -> 872,53\n" +
    "559,713 -> 559,132\n" +
    "894,237 -> 211,920\n" +
    "237,259 -> 237,39\n" +
    "738,542 -> 976,542\n" +
    "163,34 -> 525,34\n" +
    "681,672 -> 264,255\n" +
    "37,827 -> 722,827\n" +
    "60,803 -> 514,349\n" +
    "433,866 -> 433,257\n" +
    "379,493 -> 379,643\n" +
    "697,588 -> 192,83\n" +
    "875,646 -> 318,89\n" +
    "634,983 -> 634,111\n" +
    "636,69 -> 636,41\n" +
    "911,780 -> 701,570\n" +
    "792,71 -> 956,71\n" +
    "682,338 -> 608,412\n" +
    "257,768 -> 450,575\n" +
    "112,25 -> 795,708\n" +
    "730,86 -> 730,65\n" +
    "966,785 -> 789,608\n" +
    "390,263 -> 483,356\n" +
    "90,852 -> 90,471\n" +
    "507,914 -> 769,914\n" +
    "803,535 -> 803,245\n" +
    "710,787 -> 570,787\n" +
    "138,842 -> 270,710\n" +
    "862,988 -> 862,656\n" +
    "56,408 -> 849,408\n" +
    "16,10 -> 979,973\n" +
    "982,14 -> 12,984\n" +
    "647,915 -> 38,306\n" +
    "797,487 -> 19,487\n" +
    "539,933 -> 924,933\n" +
    "509,734 -> 176,734\n" +
    "813,505 -> 976,505\n" +
    "474,987 -> 474,896\n" +
    "21,200 -> 164,200\n" +
    "986,973 -> 31,18\n" +
    "919,830 -> 111,22\n" +
    "32,574 -> 456,150\n" +
    "743,595 -> 842,595\n" +
    "623,306 -> 722,306\n" +
    "878,367 -> 519,367\n" +
    "924,221 -> 924,231\n" +
    "86,950 -> 773,263\n" +
    "950,248 -> 537,248\n" +
    "149,155 -> 962,968\n" +
    "449,568 -> 179,568\n" +
    "186,304 -> 868,986\n" +
    "921,320 -> 639,602\n" +
    "602,262 -> 602,500\n" +
    "602,33 -> 602,248\n" +
    "380,731 -> 423,774\n" +
    "535,110 -> 638,110\n" +
    "552,317 -> 552,75\n" +
    "173,667 -> 173,847\n" +
    "707,480 -> 195,480\n" +
    "833,398 -> 267,964\n" +
    "276,716 -> 413,716\n" +
    "342,816 -> 922,816\n" +
    "24,184 -> 715,875\n" +
    "762,330 -> 717,285\n" +
    "718,886 -> 718,551\n" +
    "707,834 -> 707,704\n" +
    "479,578 -> 161,896\n" +
    "145,297 -> 145,435\n" +
    "760,651 -> 536,875\n" +
    "954,629 -> 954,816\n" +
    "305,949 -> 305,919\n" +
    "55,132 -> 55,233\n" +
    "469,85 -> 439,85\n" +
    "653,990 -> 536,990\n" +
    "876,531 -> 432,87\n" +
    "698,207 -> 698,672\n" +
    "11,70 -> 766,825\n" +
    "591,357 -> 30,918\n" +
    "697,987 -> 697,823\n" +
    "610,903 -> 370,663\n" +
    "319,678 -> 319,504\n" +
    "337,150 -> 309,150\n" +
    "876,57 -> 311,57\n" +
    "673,268 -> 345,596\n" +
    "895,364 -> 518,741\n" +
    "327,662 -> 941,48\n" +
    "77,709 -> 110,742\n" +
    "194,78 -> 661,78\n" +
    "587,24 -> 825,24\n" +
    "503,317 -> 719,317\n" +
    "459,632 -> 704,387\n" +
    "717,292 -> 835,292\n" +
    "912,927 -> 72,87\n" +
    "510,527 -> 146,527\n" +
    "336,771 -> 336,266\n" +
    "566,961 -> 496,961\n" +
    "969,335 -> 122,335\n" +
    "925,443 -> 925,397\n" +
    "316,812 -> 606,812\n" +
    "815,795 -> 116,795\n" +
    "169,36 -> 354,36\n" +
    "358,274 -> 389,274\n" +
    "302,147 -> 839,684\n" +
    "762,372 -> 972,372\n" +
    "172,721 -> 682,211\n" +
    "265,150 -> 248,167\n" +
    "753,559 -> 307,559\n" +
    "823,121 -> 823,126\n" +
    "498,856 -> 498,135\n" +
    "75,977 -> 75,381\n" +
    "541,297 -> 541,320\n" +
    "735,108 -> 866,108\n" +
    "434,907 -> 868,907\n" +
    "915,959 -> 255,959\n" +
    "967,666 -> 967,209\n" +
    "361,600 -> 361,222\n" +
    "314,580 -> 314,497\n" +
    "175,989 -> 523,641\n" +
    "957,97 -> 311,743\n" +
    "956,227 -> 12,227\n" +
    "95,364 -> 95,742\n" +
    "857,141 -> 193,805\n" +
    "388,651 -> 468,731\n" +
    "582,177 -> 324,177\n" +
    "68,272 -> 68,720\n" +
    "543,490 -> 910,490\n" +
    "508,281 -> 902,281\n" +
    "823,380 -> 823,296\n" +
    "23,10 -> 946,933\n" +
    "813,70 -> 813,450\n" +
    "881,893 -> 598,893\n" +
    "535,781 -> 973,781\n" +
    "80,890 -> 909,61\n" +
    "604,630 -> 307,927\n" +
    "836,917 -> 184,917\n" +
    "76,727 -> 10,727\n" +
    "727,235 -> 727,578\n" +
    "629,80 -> 892,80\n" +
    "110,655 -> 663,102\n" +
    "985,12 -> 11,986\n" +
    "830,656 -> 830,761\n" +
    "660,869 -> 660,543\n" +
    "381,340 -> 381,562\n" +
    "392,735 -> 417,735\n" +
    "855,24 -> 320,24\n" +
    "801,669 -> 278,146\n" +
    "730,964 -> 107,964\n" +
    "523,158 -> 385,20\n" +
    "27,833 -> 27,987\n" +
    "569,707 -> 500,707\n" +
    "527,732 -> 527,424\n" +
    "74,88 -> 273,287\n" +
    "143,974 -> 143,735\n" +
    "247,388 -> 813,954\n" +
    "577,14 -> 945,382\n" +
    "49,43 -> 953,947\n" +
    "332,210 -> 332,143\n" +
    "69,280 -> 949,280\n" +
    "25,923 -> 904,44\n" +
    "306,569 -> 306,470\n" +
    "158,273 -> 113,228\n" +
    "771,355 -> 694,278\n" +
    "515,115 -> 245,385\n" +
    "427,381 -> 427,729\n" +
    "16,987 -> 987,16\n" +
    "319,463 -> 319,234\n" +
    "854,977 -> 66,189\n" +
    "794,194 -> 794,183\n" +
    "576,65 -> 576,843\n" +
    "37,964 -> 734,964\n" +
    "740,920 -> 740,877\n" +
    "245,487 -> 245,957\n" +
    "404,794 -> 853,794\n" +
    "660,656 -> 660,756\n" +
    "921,605 -> 127,605\n" +
    "650,894 -> 916,894\n" +
    "968,893 -> 481,406\n" +
    "986,979 -> 21,14\n" +
    "154,303 -> 498,647\n" +
    "720,338 -> 229,338\n" +
    "62,936 -> 62,897\n" +
    "55,820 -> 55,923\n" +
    "812,31 -> 551,31\n" +
    "338,466 -> 951,466\n" +
    "663,492 -> 775,604\n" +
    "449,602 -> 39,602\n" +
    "44,403 -> 44,144\n" +
    "58,62 -> 339,62\n" +
    "713,730 -> 713,502\n" +
    "704,525 -> 976,797\n" +
    "372,709 -> 372,680\n" +
    "709,387 -> 153,387\n" +
    "922,103 -> 615,103\n" +
    "629,839 -> 121,839\n" +
    "206,722 -> 529,722\n" +
    "232,556 -> 422,746\n" +
    "300,470 -> 300,726\n" +
    "376,820 -> 622,574\n" +
    "834,25 -> 255,604\n" +
    "271,200 -> 271,875\n" +
    "804,934 -> 872,934\n" +
    "900,753 -> 900,632\n" +
    "604,323 -> 604,70\n" +
    "890,911 -> 890,41\n" +
    "464,169 -> 812,169\n" +
    "850,196 -> 850,903\n" +
    "34,574 -> 34,54\n" +
    "718,59 -> 462,315\n" +
    "431,923 -> 737,923\n" +
    "433,573 -> 433,420\n" +
    "297,478 -> 297,775\n" +
    "756,545 -> 544,545\n" +
    "247,708 -> 247,702\n" +
    "736,835 -> 173,272\n" +
    "319,85 -> 319,827\n" +
    "931,775 -> 683,775\n" +
    "292,315 -> 451,315\n" +
    "397,435 -> 380,435\n" +
    "987,978 -> 82,73\n" +
    "227,349 -> 227,724\n" +
    "349,741 -> 899,191\n" +
    "965,325 -> 765,125\n" +
    "849,306 -> 88,306\n" +
    "516,548 -> 516,902\n" +
    "919,395 -> 568,395\n" +
    "736,507 -> 192,507\n" +
    "960,782 -> 196,18\n" +
    "431,413 -> 510,492\n" +
    "911,696 -> 911,830\n" +
    "888,225 -> 174,225\n" +
    "57,790 -> 57,953\n" +
    "858,399 -> 119,399\n" +
    "59,302 -> 290,302\n" +
    "456,907 -> 456,599\n" +
    "374,743 -> 374,565\n" +
    "183,107 -> 183,171\n" +
    "58,699 -> 288,699\n" +
    "886,970 -> 109,193\n" +
    "940,395 -> 806,261\n" +
    "781,480 -> 596,665\n" +
    "456,724 -> 265,724\n" +
    "414,406 -> 299,521\n" +
    "115,898 -> 115,863\n" +
    "34,543 -> 34,496\n" +
    "900,843 -> 900,457\n" +
    "165,209 -> 189,209\n" +
    "976,627 -> 539,190\n" +
    "252,202 -> 137,202\n" +
    "584,339 -> 550,373\n" +
    "580,153 -> 380,353\n" +
    "232,412 -> 650,830\n" +
    "910,833 -> 88,11\n" +
    "418,245 -> 829,245\n" +
    "298,823 -> 907,214\n" +
    "91,876 -> 495,876\n" +
    "315,874 -> 650,539\n" +
    "907,635 -> 365,635\n" +
    "339,313 -> 320,313\n" +
    "362,435 -> 362,938\n" +
    "152,664 -> 152,391\n" +
    "253,210 -> 272,210\n" +
    "216,396 -> 216,726\n" +
    "852,912 -> 15,75\n" +
    "882,828 -> 689,828\n" +
    "674,533 -> 674,523\n" +
    "469,719 -> 469,79\n" +
    "733,169 -> 665,101\n" +
    "734,632 -> 717,632\n" +
    "615,565 -> 615,114\n" +
    "979,720 -> 243,720\n" +
    "827,125 -> 827,919\n" +
    "605,419 -> 601,419\n" +
    "749,13 -> 433,329\n" +
    "990,902 -> 990,843\n" +
    "186,679 -> 186,457\n" +
    "374,796 -> 736,796\n" +
    "133,867 -> 133,801\n" +
    "757,622 -> 812,567\n" +
    "351,179 -> 351,509\n" +
    "214,748 -> 575,748\n" +
    "177,903 -> 861,219\n" +
    "747,981 -> 747,64\n" +
    "588,125 -> 588,557\n" +
    "464,338 -> 769,338\n" +
    "645,669 -> 125,149\n" +
    "579,352 -> 138,352\n" +
    "77,605 -> 520,605\n" +
    "698,816 -> 698,917\n" +
    "112,943 -> 112,834\n" +
    "731,720 -> 724,720\n" +
    "887,440 -> 976,351\n" +
    "676,301 -> 676,741\n" +
    "870,732 -> 870,648\n" +
    "250,826 -> 413,826\n" +
    "399,720 -> 543,864\n" +
    "834,93 -> 468,459\n" +
    "415,475 -> 415,641\n" +
    "793,415 -> 47,415\n" +
    "365,476 -> 365,31\n" +
    "195,154 -> 813,154\n" +
    "503,605 -> 773,605\n" +
    "553,121 -> 851,121\n" +
    "25,420 -> 423,818\n" +
    "943,110 -> 258,110\n" +
    "775,436 -> 826,436\n" +
    "16,161 -> 16,889\n" +
    "702,555 -> 920,555\n" +
    "589,858 -> 533,802\n" +
    "932,404 -> 932,539\n" +
    "647,275 -> 647,962\n" +
    "87,179 -> 326,179\n" +
    "931,588 -> 931,287\n" +
    "868,96 -> 557,96\n" +
    "879,28 -> 875,28\n" +
    "375,132 -> 287,44\n" +
    "484,352 -> 644,512\n" +
    "448,566 -> 448,214\n" +
    "734,460 -> 717,460\n" +
    "550,379 -> 550,674\n" +
    "964,184 -> 820,328\n" +
    "167,504 -> 387,504\n" +
    "594,777 -> 952,777\n" +
    "328,712 -> 837,712\n" +
    "600,773 -> 546,773\n" +
    "955,954 -> 82,81\n" +
    "863,790 -> 863,86\n" +
    "831,773 -> 32,773\n" +
    "987,11 -> 19,979\n" +
    "901,878 -> 901,177\n" +
    "427,341 -> 721,635\n" +
    "690,835 -> 567,835\n" +
    "557,724 -> 14,181\n" +
    "591,20 -> 205,406\n" +
    "846,865 -> 846,859\n" +
    "644,646 -> 742,548\n" +
    "187,376 -> 187,563\n" +
    "367,806 -> 250,923\n" +
    "332,731 -> 468,731\n" +
    "378,431 -> 469,431\n" +
    "844,949 -> 844,452\n" +
    "172,320 -> 735,320\n" +
    "597,639 -> 633,639\n" +
    "353,831 -> 353,307\n" +
    "355,392 -> 465,392\n" +
    "624,179 -> 548,255\n" +
    "441,928 -> 401,888\n" +
    "442,680 -> 442,569\n" +
    "567,385 -> 908,44\n" +
    "10,561 -> 603,561\n" +
    "851,289 -> 13,289\n" +
    "832,143 -> 832,64\n" +
    "366,851 -> 67,851\n" +
    "890,404 -> 333,961\n" +
    "83,22 -> 963,902\n" +
    "10,783 -> 821,783\n" +
    "369,481 -> 369,611\n" +
    "943,356 -> 846,356\n" +
    "675,95 -> 335,435\n" +
    "442,928 -> 442,764\n" +
    "500,643 -> 334,643\n" +
    "90,207 -> 620,207\n" +
    "520,412 -> 745,187\n" +
    "586,89 -> 613,89\n" +
    "411,424 -> 595,424\n" +
    "938,650 -> 232,650\n" +
    "216,773 -> 76,773\n" +
    "895,690 -> 895,294\n" +
    "250,886 -> 250,605\n" +
    "296,422 -> 863,989\n" +
    "534,626 -> 534,707\n" +
    "577,608 -> 52,83\n" +
    "61,674 -> 714,21\n" +
    "844,126 -> 844,694\n" +
    "565,541 -> 253,229\n" +
    "62,24 -> 986,948\n" +
    "588,901 -> 588,212\n" +
    "541,508 -> 541,141\n" +
    "516,376 -> 589,449\n" +
    "390,215 -> 749,215\n" +
    "324,878 -> 296,850\n" +
    "592,408 -> 592,158\n" +
    "433,207 -> 172,207\n" +
    "139,72 -> 139,121\n" +
    "471,676 -> 268,676\n" +
    "374,433 -> 374,95\n" +
    "672,459 -> 640,427\n" +
    "348,577 -> 843,82\n" +
    "903,466 -> 903,348\n" +
    "437,759 -> 726,470\n" +
    "152,101 -> 325,274\n" +
    "933,897 -> 335,897\n" +
    "516,877 -> 505,866\n" +
    "890,715 -> 570,715\n" +
    "78,124 -> 871,917\n" +
    "360,645 -> 967,645\n" +
    "645,271 -> 645,57\n" +
    "693,878 -> 693,159\n" +
    "49,77 -> 49,744\n" +
    "935,914 -> 97,76\n" +
    "941,726 -> 941,464\n" +
    "756,985 -> 756,480\n" +
    "887,378 -> 887,529\n" +
    "405,925 -> 405,533\n" +
    "533,156 -> 201,156\n" +
    "565,535 -> 120,90\n" +
    "51,15 -> 967,931\n" +
    "660,218 -> 660,339\n" +
    "522,682 -> 571,682\n" +
    "958,899 -> 729,899\n" +
    "521,687 -> 288,687\n" +
    "643,148 -> 468,323\n" +
    "989,971 -> 68,50\n" +
    "729,273 -> 311,691\n" +
    "245,205 -> 305,205\n" +
    "634,747 -> 634,605\n" +
    "280,407 -> 488,199\n" +
    "109,931 -> 706,334\n" +
    "849,694 -> 615,928\n" +
    "794,84 -> 218,84\n" +
    "669,184 -> 865,184\n" +
    "936,834 -> 234,132\n" +
    "691,445 -> 914,668\n" +
    "423,161 -> 515,69\n" +
    "81,674 -> 37,674\n" +
    "292,423 -> 292,741\n" +
    "188,306 -> 844,962\n" +
    "204,309 -> 204,705\n" +
    "961,652 -> 746,652\n" +
    "985,987 -> 11,13\n" +
    "139,153 -> 936,950\n" +
    "436,978 -> 244,978\n" +
    "921,633 -> 921,340\n" +
    "872,63 -> 233,63";

let testData = "0,9 -> 5,9\n" +
"8,0 -> 0,8\n" +
"9,4 -> 3,4\n" +
"2,2 -> 2,1\n" +
"7,0 -> 7,4\n" +
"6,4 -> 2,0\n" +
"0,9 -> 2,9\n" +
"3,4 -> 1,4\n" +
"0,0 -> 8,8\n" +
"5,5 -> 8,2";

// Set up a map to store coordinates and how many times that point is "hit".
// {"x,y", hits}
let pointMap = new Map();

// A nice little code snippet from the Array docs:
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from#sequence_generator_range
let range = (min, max, step) => {
    let minNum = Number(min);
    let maxNum = Number(max);

    return Array.from({length: (maxNum - minNum) / step + 1}, (_, i) => minNum + (i * step));
}

let addPointToMap = (point) => {
    // If the point is already in the map, then we should instead just increment the number of hits
    if(pointMap.has(point)) {
        pointMap.set(point, pointMap.get(point) + 1);
    } else {
        pointMap.set(point, 1);
    }
}

let createPoint = (pointData) => {
    let coordinate = pointData.split(',');
    return [coordinate[0], coordinate[1]];
}

let findLineDirection = (point1, point2) => {
    let splitPoint1 = point1.split(',');
    let splitPoint2 = point2.split(',');

    let point1X = splitPoint1[0];
    let point1Y = splitPoint1[1];

    let point2X = splitPoint2[0];
    let point2Y = splitPoint2[1];

    if (point1X === point2X) {
        // If the x-coordinates are the same, it's a vertical line
        return 'vertical';
    } else if (point1Y === point2Y) {
        // If the y-coordinates are the same, it's a horizontal line
        return 'horizontal';
    } else {
        return 'diagonal';
    }
}

let findMin = (value1, value2) => {
    if (value1 < value2) {
        return value1;
    } else {
        return value2;
    }
}

let findMax = (value1, value2) => {
    if (value1 > value2) {
        return value1;
    } else {
        return value2;
    }
}

// Parse the data given
let addHits = (data) => {
    let parsedData = data.split('\n');

    parsedData.forEach(function(dataPoint) {
        let splitPoint = dataPoint.split(' -> ');

        // Set up point1
        let point1 = splitPoint[0];

        //Set up point2
        let point2 = splitPoint[1];

        // Now we need to look at all the points in between the two starter points and add a hit for those
        // The directionality doesn't seem to matter, so just figure out which number is the min and which is the max
        let direction = findLineDirection(point1, point2);

        let splitPoint1 = point1.split(',');
        let splitPoint2 = point2.split(',');

        let point1X = splitPoint1[0];
        let point1Y = splitPoint1[1];

        let point2X = splitPoint2[0];
        let point2Y = splitPoint2[1];

        if (direction === 'vertical') {
            // x-coordinates are the same
            let min = findMin(point1Y, point2Y);
            let max = findMax(point1Y, point2Y);

            // Find all the y-coordinates
            let yCoordinates = range(min, max, 1);

            // Now add all those coordinates to the pointMap!
            yCoordinates.forEach(function(yCoordinate) {
                addPointToMap(point1X + ',' + yCoordinate.toString());
            });
        } else if (direction === 'horizontal') {
            // y-coordinates are the same
            let min = findMin(point1X, point2X);
            let max = findMax(point1X, point2X);

            // Find all the x-coordinates
            let xCoordinates = range(min, max, 1);

            // Now add all those coordinates to the pointMap!
            xCoordinates.forEach(function(xCoordinate) {
                addPointToMap(xCoordinate.toString() + ',' + point1Y);
            });
        }
    })
}

let dangerousAreas = map => {
  let dangers = 0;

    for (let count of map.values()){
        if (count > 1) {
            dangers++;
        }
    }

    return dangers;
};

addHits(testData);
console.log(pointMap);
console.log('Dangerous areas: ' + dangerousAreas(pointMap));